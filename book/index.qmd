# Guide to py-rocket-base

The py-rocket-base image is a base image for JupyterHubs with Jupyter Lab, RStudio, Desktop, and VSCode UIs. What makes py-rocket-base unique, is that the RStudio UI (via `/rstudio`) is a R and RStudio environment installed with Rocker installation scripts. Thus all the Rocker design choices and R/RStudio environment choices are in that UI. Properly setting up environments to work properly with spatial libraries and HPC libraries is tricky. py-rocket-base solves this problem (and the associated maintenance of installation scripts) by using Rocker installation scripts. 

The base image has the following support:

* Python + JupyterLab with mamba handling package installation and repo2docker (Pangeo) environment design
* R + RStudio with the Rocker environment design and Rocker scripts and other functions included
* Desktop UI for serving applications, including Java-based applications
* VSCode UI
* Quarto, Myst and Texlive installed with tlmgr for tex package management

**Design**: py-rocket-base is inspired by repo2docker and the Pangeo Docker stack design. py-rocker-base is built using repo2docker (via `repo2docker-action`) and thus lets repo2docker make the choices regarding the environment design---things like how the conda environment is set-up and the base directory structure and permissions. The Pangeo Docker stack does not use repo2docker, but mimics repo2docker's environment design. The Pangeo base-image is designed like repo2docker in that using the base-image in the `FROM` line of a Dockerfile causes the build to look for files with particular names (like `environment.yml`) and then do the proper action with those files. This means that routine users do not need to know how to write Dockerfile code in order to extend the image with new packages or applications. py-rocker-base Docker image uses this Pangeo base-image design. It is based on `ONBUILD` commands in the Dockerfile that trigger actions only when the image is used in the `FROM` line of another Dockerfile.

*There are many ways to install R and RStudio into an image designed for JupyterHubs* The objective of py-rocker-base is not to install R and RStudio, per se, and there are other leaner and faster ways to install R/RStudio if that is your goal[^1]. The objective of py-rocket-base is to create an JupyterHub image such when you click the RStudio button in the JupyterLab UI to enter the RStudio UI, you enter an environment that is the same as if you had used a Rocker image. If you are in the JupyterLab UI, the environment is the same as it you had used repo2docker (or Pangeo base-image) to create the environment.

[^1]: See the Developer section for links to some other approaches.

