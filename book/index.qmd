# Introduction {.unnumbered}
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.13942617.svg)](https://doi.org/10.5281/zenodo.13942617)[![GitHub Release](https://img.shields.io/github/v/release/nmfs-opensci/py-rocket-base)](https://github.com/nmfs-opensci/py-rocket-base/releases) `ghcr.io/nmfs-opensci/py-rocket-base:latest`

The py-rocket-base image is a base image for JupyterHubs with Jupyter Lab, RStudio, Desktop, and VSCode UIs. What makes py-rocket-base unique, is that the RStudio UI (via `/rstudio`) is a R and RStudio environment installed with Rocker installation scripts[^1]. Thus all the Rocker design choices and R/RStudio environment choices are in that UI. Properly setting up environments to work properly with spatial libraries and HPC libraries is tricky. py-rocket-base solves this problem (and the associated maintenance of installation scripts) by using Rocker installation scripts. 

The base image has the following support:

* Python + JupyterLab with mamba handling package installation and repo2docker (Pangeo) environment design
* R + RStudio with the Rocker environment design and Rocker scripts and other functions included
* Desktop UI for serving applications, including Java-based applications
* VSCode UI
* Quarto, Myst and Texlive installed with tlmgr for tex package management

[^1]: See the Developer section other approaches for installing R/RStudio and the design goals for py-rocket-base.

## Using the image

Include a Dockerfile in your repository with the following from line:
```
FROM ghcr.io/nmfs-opensci/py-rocket-base:latest
```
For simple extensions of py-rocket-base, this is the only line you need in the Dockerfile. py-rocket-base has `ONBUILD` statements that detect configuration files with the names: `environment.yml`, `install.R`, `apt.txt`, `postBuild`, `start`, and `Desktop` (directory). If those files are present, it triggers specific installation behavior. You can also add lines directory to the Dockerfile. See the documentation on using the base image.

This work is related to the work on the [NMFS Open Science docker stack](https://nmfs-opensci.github.io/container-images/).

