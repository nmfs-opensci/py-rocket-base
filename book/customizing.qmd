# Using py-rocket-base

py-rocket-base is designed to be used in the FROM line of a Dockerfile. It behaves like repo2docker in that it looks for special files and will 
install Python packages or R packages if those special files are present. You do not need to add anything to the Dockerfile to have it process these files. py-rocker-base does this automatically for you (via ONBUILD commands).

If you don't want it to do this then do not name your files one of these names:

- environment.yml
- install.R
- postBuild
- apt.txt
- start

## File structure

Only Dockerfile is required. The rest are optional. 

```
your-repo/
├── Dockerfile
├── apt.txt
├── environment.yml
├── install.R
├── postBuild
├── start
├── Desktop/
│   ├── qgis.desktop
│   ├── qgis.xml
│   └── qgis.png
```

Read [configuration_files](configuration_files.html) to learn about apt.txt, environment.yml, install.R, postBuild, and start. Read [Desktop](desktop.html) to learn about the Desktop folder and files for applications.

## Examples

### Add some Python packages

You want to add some Python packages to the conda notebook environment.

```
your-repo/
├── Dockerfile
├── environment.yml
```

Dockerfile
```
FROM ghcr.io/nmfs-opensci/py-rocket-base:latest
```

environment.yml
```
name: optional
channels:
  - conda-forge
dependencies:
  - cmocean
  - numpy
```

### Add R packages

Add an R script to install packages. **Important**: packages that have linux dependencies (e.g. all the spatial packages depend on GDAL) will not work if you use `install.packages()`. GDAL will not be installed.

```
your-repo/
├── Dockerfile
├── install.R
```

Dockerfile
```
FROM ghcr.io/nmfs-opensci/py-rocket-base:latest
```

install.R
```
# to match rocker/verse:4.4 used in py-rocker-base
# look up the date that the Rocker image was created and put that
repo <- "https://p3m.dev/cran/__linux__/jammy/2024-05-13"
list.of.packages <- c("ncdf4", "httr", "plyr", "lubridate")
install.packages(list.of.packages, repos=repo)
```

### Add R geospatial packages

Geospatial packages require some linux packages. To get this working in your Docker image add this to your Docker file:

Dockerfile
```
FROM ghcr.io/nmfs-opensci/py-rocket-base:latest

USER root
RUN /rocker_scripts/install_geospatial.sh
USER ${NB_USER} 
```

You have access to all the rocker_scripts and you can run these similar to the line above.




